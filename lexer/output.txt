#include <iostream> - PREPROCESS_DIRECTIVE
using - RESERVED
namespace - RESERVED
std - IDENTIFIER
; - DELIMITER
#define getmax(a,b) a>b?a:b - PREPROCESS_DIRECTIVE
int - RESERVED
calculatePower - IDENTIFIER
( - DELIMITER
int - RESERVED
, - DELIMITER
int - RESERVED
) - DELIMITER
; - DELIMITER
int - RESERVED
main - IDENTIFIER
( - DELIMITER
) - DELIMITER
{ - DELIMITER
int - RESERVED
base - IDENTIFIER
, - DELIMITER
powerRaised - IDENTIFIER
, - DELIMITER
result - IDENTIFIER
; - DELIMITER
cout - IDENTIFIER
<< - OPERATOR
"Enter base number: " - STRING
; - DELIMITER
cin - IDENTIFIER
>> - OPERATOR
base - IDENTIFIER
; - DELIMITER
cout - IDENTIFIER
<< - OPERATOR
"Enter power number(positive integer): " - STRING
; - DELIMITER
cin - IDENTIFIER
>> - OPERATOR
powerRaised - IDENTIFIER
; - DELIMITER
result - IDENTIFIER
= - OPERATOR
calculatePower - IDENTIFIER
( - DELIMITER
base - IDENTIFIER
, - DELIMITER
powerRaised - IDENTIFIER
) - DELIMITER
; - DELIMITER
cout - IDENTIFIER
<< - OPERATOR
base - IDENTIFIER
<< - OPERATOR
"^" - STRING
<< - OPERATOR
powerRaised - IDENTIFIER
<< - OPERATOR
" = " - STRING
<< - OPERATOR
result - IDENTIFIER
; - DELIMITER
return - RESERVED
0 - DECIMAL
; - DELIMITER
} - DELIMITER
int - RESERVED
calculatePower - IDENTIFIER
( - DELIMITER
int - RESERVED
base - IDENTIFIER
, - DELIMITER
int - RESERVED
powerRaised - IDENTIFIER
) - DELIMITER
{ - DELIMITER
if - RESERVED
( - DELIMITER
powerRaised - IDENTIFIER
!= - OPERATOR
0 - DECIMAL
) - DELIMITER
return - RESERVED
( - DELIMITER
base - IDENTIFIER
* - OPERATOR
calculatePower - IDENTIFIER
( - DELIMITER
base - IDENTIFIER
, - DELIMITER
powerRaised - IDENTIFIER
- - OPERATOR
1 - DECIMAL
) - DELIMITER
) - DELIMITER
; - DELIMITER
else - RESERVED
return - RESERVED
1 - DECIMAL
; - DELIMITER
} - DELIMITER
